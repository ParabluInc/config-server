server.port=8085

# Kafka common config
spring.kafka.bootstrap-servers=pkc-7prvp.centralindia.azure.confluent.cloud:9092
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='BBDLEHJBC55W5E3X'   password='eWT5BpmMd1QsnYkM6Zl8dHkaXS39loCDhRnnx1UihIlJLccjFsuR/l6NW9VFYcQ/';
spring.kafka.properties.sasl.mechanism: PLAIN

# Kafka common consumer config
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.fetch-max-wait=500
spring.kafka.consumer.heartbeat-interval=3000
spring.kafka.consumer.session-timeout=100000
spring.kafka.consumer.max-partition-fetch-bytes=10485760
spring.kafka.consumer.max-poll-interval=43200000
spring.kafka.consumer.concurrency=10
spring.kafka.consumer.json-deserializer.trusted-packages=com.parablu.common
spring.kafka.consumer.retry.maxAttempt=3
spring.kafka.consumer.retry.backOffPeriod=1000

# Kafka Common producer config
spring.kafka.producer.retries=3
spring.kafka.producer.buffer-memory=33554432

#Kafka update process
spring.kafka.topic.update.process=arun-data-vault-manager-update-process-v1

#Kafka Crawl
spring.kafka.consumer.backup.crawl.group-id=arun-data-vault-manager-backup-crawl-v1
spring.kafka.topic.backup.crawl=arun-data-vault-manager-backup-initiate-v1
spring.kafka.topic.backup.crawl.dlq=dev-data-vault-manager-backup-initiate-dlq-v1

#backup source download
#Kafka Configuration
spring.kafka.topic.backup.sourceBackup=arun-data-vault-manager-backup-execution-v1
spring.kafka.consumer.backup.sourceBackup.group-id=arun-data-vault-manager-source-backup-v1
spring.kafka.topic.backup.source.download.dlq=dev-data-vault-manager-backup-execution-dlq-v1

#Kafka intermediate storage upload
spring.kafka.topic.backup.intermediateStorageUpload=arun-data-vault-manager-backup-intermediate-storage-upload-v1
spring.kafka.consumer.backup.intermediateStorageUpload.group-id=arun-data-vault-manager-backup-intermediate-storage-upload-v1

#Kafka backupfulfillment
spring.kafka.topic.backup.fulfillment=arun-data-vault-manager-backup-fulfillment-v1

#Kafka batch update 
spring.kafka.topic.batch.update=arun-data-vault-manager-batch-update-v1

#Kafka backupImage
spring.kafka.topic.backup.image=arun-data-vault-manager-backup-image-v1

#Kafka retrieve execution
spring.kafka.topic.retrieve=arun-data-vault-manager-retrieve-execution-v1
spring.kafka.consumer.retrieve.group-id=arun-data-vault-manager-retrieve-execution-v1

# Azure key vault URI
spring.azure.vault.url=https://dev-datavault.vault.azure.net/

# Azure Hot Blob
azure.storage.blob.hot-tier.account-name=pbdevengg

azure.signed.url.expire = 7
# Azure Cool Blob
azure.storage.blob.cool-tier.account-name=pbdevenggv2cool

# Graph scope
spring.graph.scope=https://graph.microsoft.com/.default

# Graph Authorised Application Ids
spring.graph.application.ids=632148d4-0253-437e-9f32-2c554b2d095f, adeb532c-9739-47f9-b3ad-fabf3ac9a6d1, 03736cfc-03a3-49fe-b4eb-f12c19a7ab6e

# Gmail scope
spring.gmail.scope=https://mail.google.com/

# Gmail Authorised Project Ids
spring.gmail.client.ids=117282026629369750113, 105983899177282987945, 108352622680835010966

# Redis
spring.cache.type=redis
spring.redis.host=172.232.113.63
spring.redis.port=6379
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0
spring.redis.time-to-live.tokenCache=60000

# O365 resource concurrency
parabluConnectorService.o365.exchange.mailbox.concurrency=4

# Crawl Task Executor
crawl.task.executor.maxDevices=100
crawl.task.executor.perDevice.corePoolSize=20
crawl.task.executor.perDevice.maxPoolSize=20
crawl.task.executor.perDevice.keepAliveSeconds=60
crawl.task.executor.perDevice.queue=100
crawl.task.executor.threadNamePrefix=CrawlTaskExecutor
crawl.task.executor.perDevice.max.mailfolder.parallelBatch=10
#TODO: Add concurency for message batches
crawl.task.executor.perDevice.max.message.parallelBatch=20 
crawl.task.executor.perDevice.max.message.perBatchCount=100

# Source Download Task Executor
sourceDownload.task.executor.maxDevices=100
sourceDownload.task.executor.perDevice.corePoolSize=20
sourceDownload.task.executor.perDevice.maxPoolSize=20
sourceDownload.task.executor.perDevice.keepAliveSeconds=60
sourceDownload.task.executor.perDevice.queue=100
sourceDownload.task.executor.threadNamePrefix=SourceDownloadTaskExecutor

# Intermediate Storage upload Task Executor
intermediateStorageUpload.task.executor.maxDevices=100
intermediateStorageUpload.task.executor.perDevice.corePoolSize=10
intermediateStorageUpload.task.executor.perDevice.maxPoolSize=10
intermediateStorageUpload.task.executor.perDevice.keepAliveSeconds=60
intermediateStorageUpload.task.executor.perDevice.queue=100
intermediateStorageUpload.task.executor.threadNamePrefix=IntermediateStorageUploadTaskExecutor

# retrieve Download Task Executor
retrieveExecution.task.executor.maxDevices=100
retrieveExecution.task.executor.perDevice.corePoolSize=10
retrieveExecution.task.executor.perDevice.maxPoolSize=10
retrieveExecution.task.executor.perDevice.keepAliveSeconds=60
retrieveExecution.task.executor.perDevice.queue=100
retrieveExecution.task.executor.threadNamePrefix=RetrieveExecutionTaskExecutor

# Reslience4j for graph service client
resilience4j.retry.instances.graphClient.maxAttempts=5
resilience4j.retry.instances.graphClient.waitDuration=5s
resilience4j.retry.instances.graphClient.enableExponentialBackoff=true
resilience4j.retry.instances.graphClient.exponentialBackoffMultiplier=5
resilience4j.retry.instances.graphClient.retryExceptionPredicate=com.parablu.datavaultmanagerservice.parabluconnectorserviceclient.graph.predicate.GraphExceptionPredicate

aspose.license.path=/Users/arunkumar.p/Documents/pst/Aspose.Email.Java.lic

#Database connection
spring.datasource.url=jdbc:mysql://172.232.113.63:48765/datavault
spring.datasource.username=neil
spring.datasource.password=P@raB!u0153
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.kafka.consumer.properties.request.timeout.ms=15000
spring.kafka.consumer.properties.session.timeout.ms=10000
spring.redis.timeout=5000
spring.datasource.hikari.connection-timeout=30000



